[metadata]
name = nnreslib
author = Denis Kondaurov, Andrey Tolstyh, Maxim Elchugin
author_email = xausssr@gmail.com
maintainer = Andrey Tolstyh
maintainer_email = xausssr@gmail.com
url = https://github.com/xausssr/nnreslib
project_urls =
    Bug Tracker = https://github.com/xausssr/nnreslib/issues
    Source Code = https://github.com/xausssr/nnreslib
platform = any
description = nnreslib (TODO: fix)
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT License
classifiers =
    License :: OSI Approved :: MIT License
    Development Status :: 2 - Pre-Alpha
    Environment :: Console
    Framework :: Jupyter
    Framework :: Matplotlib
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Intended Audience :: Education
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering :: Artificial Intelligence

[options]
zip_safe = False
python_requires = >3.6, <4

[pylint.master]
ignore = .git
jobs = 0

[pylint.messages_control]
confidence=INFERENCE_FAILURE
disable =
    missing-docstring,
    missing-module-docstring,
    missing-function-docstring,
    logging-fstring-interpolation,
    too-few-public-methods

[pylint.format]
max-line-length = 120
max-module-lines = 1000

[pylint.miscellaneous]
notes = BUG,
    HACK,
    FIXME,
    TODO,
    XXX

[pylint.similarities]
ignore-comments = no
ignore-docstrings = no
ignore-imports = no

[pylint.spelling]
spelling-dict = en_US
spelling-ignore-words =
    Dockerfile,
    noqa,
    isort,
    numpy,
    async,
    matplotlib,
    visualisation,
    hardcode,
    maxpooling,
    dataset,
    docstring,
    backend,
    TF,
    unmark,
    dx,
    Levenberg,
    Marqvardt,
    wN,
    bN,
    TNR,
    SPC,
    PPV

[pylint.design]
max-args = 10

[isort]
reverse_relative = true
known_first_party= nnreslib
known_third_party = numpy, tensorflow, matplotlib, prettytable
line_length = 100
wrap_length = 100
multi_line_output = 3
include_trailing_comma = True

[pycodestyle]
count = True
statistics = True
ignore =
    # Line break before binary operator
    W503,
    # Whitespace before ':'
    E203
max-line-length = 120
show-pep8 = True

[mypy]
disallow_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
warn_unreachable = True
show_error_codes = True

[mypy-tensorflow.*]
ignore_missing_imports = True

# Drop after move to numpy>=1.20
[mypy-numpy.*]
ignore_missing_imports = True

[mypy-jsonschema.*]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-IPython.*]
ignore_missing_imports = True

[mypy-ipywidgets.*]
ignore_missing_imports = True

[mypy-prettytable.*]
ignore_missing_imports = True

[mypy-tests.*]
disallow_untyped_defs = false

[mypy-setup]
ignore_errors = True

[flake8]
max_line_length = 120
ignore =
    # Line break before binary operator
    W503
    # Whitespace before ':'
    E203
statistics = True
import_order_style = pycharm

[tool:pytest]
addopts = --verbose --verbose
testpaths = tests
filterwarnings =
    ignore::DeprecationWarning

[coverage:run]
branch = True
command_line = -m pytest
source = nnreslib
data_file = coverage/.coverage_db
omit =
    nnreslib/__main__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    @overload
    def main
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
precision = 2
fail_under = 75

[coverage:html]
directory = coverage/htmlcov

[coverage:xml]
output  = coverage/coverage.xml

[coverage:json]
output = coverage/coverage.json
